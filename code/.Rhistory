library(dtwclust)
library(dtw)
reading <- read.csv("../data_all/dtw_reading.csv")
head(reading)
reading <- subset(reading, select = -c(X) )
reading
colnames(reading)[colnames(reading) == "X2000"] = "2000"
colnames(reading)[colnames(reading) == "X2003"] = "2003"
colnames(reading)[colnames(reading) == "X2006"] = "2006"
colnames(reading)[colnames(reading) == "X2009"] = "2009"
colnames(reading)[colnames(reading) == "X2012"] = "2012"
colnames(reading)[colnames(reading) == "X2015"] = "2015"
colnames(reading)[colnames(reading) == "X2018"] = "2018"
reading
country = reading[['Countries']]
dtw_reading <- reading[, -1]
reading_lst <- tslist(dtw_reading)
remove_nan <- function(ts) {
ts[!is.na(ts)]
}
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_clust <- tsclust(reading_lst, type = "partitional", k = 4L,
distance = "dtw_basic", centroid = "pam")
plot(reading_clust)
cvi(reading_clust, 6, type = "valid", log.base = 10)
cvi(reading_clust, type = "valid", log.base = 10)
i <- 4
reading_clust <- tsclust(reading_lst, type = "partitional", k = iL,
distance = "dtw_basic", centroid = "pam")
i <- 4
reading_clust <- tsclust(reading_lst, type = "partitional", k = i,
distance = "dtw_basic", centroid = "pam")
plot(reading_clust)
cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- list()
for (i in 1:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, i = reading_metric)
}
library(dtwclust)
library(dtw)
reading <- read.csv("../data_all/dtw_reading.csv")
head(reading)
reading <- subset(reading, select = -c(X) )
reading
colnames(reading)[colnames(reading) == "X2000"] = "2000"
colnames(reading)[colnames(reading) == "X2003"] = "2003"
colnames(reading)[colnames(reading) == "X2006"] = "2006"
colnames(reading)[colnames(reading) == "X2009"] = "2009"
colnames(reading)[colnames(reading) == "X2012"] = "2012"
colnames(reading)[colnames(reading) == "X2015"] = "2015"
colnames(reading)[colnames(reading) == "X2018"] = "2018"
reading
country = reading[['Countries']]
dtw_reading <- reading[, -1]
reading_lst <- tslist(dtw_reading)
remove_nan <- function(ts) {
ts[!is.na(ts)]
}
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_cvi <- list()
for (i in 1:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, i = reading_metric)
}
i <-1
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, i = reading_metric)
}
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, reading_metric)
}
reading_cvi
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw_basic", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, list(reading_metric))
}
reading_cvi
sequence_list <- list(
c(1, 2, 3),
c(4, 5, 6),
c(7, 8, 9)
)
# Convert the list to a matrix
matrix_from_list <- do.call(rbind, sequence_list)
# Print the resulting matrix
print(matrix_from_list)
reading_cvi_ma <- do.call(rbind, reading_cvi)
print(reading_cvi_ma)
reading_cvi_ma <- do.call(rbind, reading_cvi)
rw <- c("K2","K3","K4","K5","K6","K7","K8","K9","K10")
rownames(reading_cvi_ma) <- rw
print(reading_cvi_ma)
reading_clust_opt <- tsclust(reading_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam")
plot(reading_clust_opt)
reading_clust_opt <- tsclust(reading_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam",seed = 725)
plot(reading_clust_opt)
t(cbind(reading$Countries, cluster = reading_clust_opt@cluster))
print(t(cbind(reading$Countries, cluster = reading_clust_opt@cluster)))
reading_clust_opt <- tsclust(reading_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam",seed = 725)
plot(reading_clust_opt)
print(t(cbind(reading$Countries, cluster = reading_clust_opt@cluster)))
plot(cvi(reading_clust_opt, type = "valid", log.base = 10))
math <- read.csv("../data_all/dtw_math.csv")
math <- subset(math, select = -c(X) )
colnames(math)[colnames(math) == "X2000"] = "2000"
colnames(math)[colnames(math) == "X2003"] = "2003"
colnames(math)[colnames(math) == "X2006"] = "2006"
colnames(math)[colnames(math) == "X2009"] = "2009"
colnames(math)[colnames(math) == "X2012"] = "2012"
colnames(math)[colnames(math) == "X2015"] = "2015"
colnames(math)[colnames(math) == "X2018"] = "2018"
dtw_math <- math[, -1]
math_lst <- tslist(dtw_math)
# Apply the function to each time series in the list
math_lst <- lapply(math_lst, remove_nan)
print(math_lst)
math_cvi <- list()
for (i in 2:10){
math_clust <- tsclust(math_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
math_metric <- cvi(math_clust, type = "valid", log.base = 10)
math_cvi <- append(math_cvi, list(math_metric))
}
print(math_cvi)
math_cvi_ma <- do.call(rbind, reading_cvi)
rownames(math_cvi_ma) <- rw
print(math_cvi_ma)
math_clust_opt <- tsclust(math_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam",seed = 725)
plot(math_clust_opt)
print(t(cbind(math$Countries, cluster = math_clust_opt@cluster)))
sci <- read.csv("../data_all/dtw_sci.csv")
sci <- subset(sci, select = -c(X) )
colnames(sci)[colnames(sci) == "X2000"] = "2000"
colnames(sci)[colnames(sci) == "X2003"] = "2003"
colnames(sci)[colnames(sci) == "X2006"] = "2006"
colnames(sci)[colnames(sci) == "X2009"] = "2009"
colnames(sci)[colnames(sci) == "X2012"] = "2012"
colnames(sci)[colnames(sci) == "X2015"] = "2015"
colnames(sci)[colnames(sci) == "X2018"] = "2018"
dtw_sci <- sci[, -1]
sci_lst <- tslist(dtw_sci)
# Apply the function to each time series in the list
sci_lst <- lapply(math_lst, remove_nan)
math_cvi_ma <- do.call(rbind, math_cvi)
rownames(math_cvi_ma) <- rw
print(math_cvi_ma)
math_clust_opt <- tsclust(math_lst, type = "partitional", k = 7, distance = "dtw", centroid = "pam",seed = 725)
plot(math_clust_opt)
print(t(cbind(math$Countries, cluster = math_clust_opt@cluster)))
sci_cvi <- list()
for (i in 2:10){
sci_clust <- tsclust(sci_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
sci_metric <- cvi(sci_clust, type = "valid", log.base = 10)
sci_cvi <- append(sci_cvi, list(sci_metric))
}
sci_cvi_ma <- do.call(rbind, sci_cvi)
rownames(sci_cvi_ma) <- rw
print(sci_cvi_ma)
sci_clust_opt <- tsclust(sci_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam",seed = 725)
plot(sci_clust_opt)
print(t(cbind(sci$Countries, cluster = sci_clust_opt@cluster)))
library(readxl)
reading <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Reading")
math <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Math")
sci <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Science")
reading <- subset(reading, select = -c(...1) )
country = reading[['Countries']]
dtw_reading <- reading[, -1]
reading
reading_lst <- tslist(dtw_reading)
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_lst <- tslist(dtw_reading)
remove_nan <- function(ts) {
ts[!is.na(ts)]
}
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_lst <- tslist(dtw_reading)
remove_nan <- function(ts) {
ts[!is.na(ts)]
}
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, list(reading_metric))
}
reading_cvi_ma <- do.call(rbind, reading_cvi)
rw <- c("K2","K3","K4","K5","K6","K7","K8","K9","K10")
rownames(reading_cvi_ma) <- rw
print(reading_cvi_ma)
reading_clust_opt <- tsclust(reading_lst, type = "partitional", k = 9, distance = "dtw", centroid = "pam",seed = 725)
plot(reading_clust_opt)
print(t(cbind(reading$Countries, cluster = reading_clust_opt@cluster)))
dtw_math <- math[, -1]
math_lst <- tslist(dtw_math)
# Apply the function to each time series in the list
math_lst <- lapply(math_lst, remove_nan)
print(math_lst)
dtw_math <- math[, -1]
math_lst <- tslist(dtw_math)
# Apply the function to each time series in the list
math_lst <- lapply(math_lst, remove_nan)
math_cvi <- list()
for (i in 2:10){
math_clust <- tsclust(math_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
math_metric <- cvi(math_clust, type = "valid", log.base = 10)
math_cvi <- append(math_cvi, list(math_metric))
}
reading <- subset(reading, select = -c(...1) )
reading <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Reading")
math <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Math")
sci <- read_excel("../data_all/new_trend_rank.xlsx", sheet = "Science")
reading <- subset(reading, select = -c(...1) )
country = reading[['Countries']]
dtw_reading <- reading[, -1]
math <- subset(math, select = -c(...1) )
sci <- subset(sci, select = -c(...1) )
dtw_math <- math[, -1]
math_lst <- tslist(dtw_math)
# Apply the function to each time series in the list
math_lst <- lapply(math_lst, remove_nan)
math_cvi <- list()
for (i in 2:10){
math_clust <- tsclust(math_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
math_metric <- cvi(math_clust, type = "valid", log.base = 10)
math_cvi <- append(math_cvi, list(math_metric))
}
math_cvi_ma <- do.call(rbind, math_cvi)
rownames(math_cvi_ma) <- rw
print(math_cvi_ma)
math_clust_opt <- tsclust(math_lst, type = "partitional", k = 6, distance = "dtw", centroid = "pam",seed = 725)
plot(math_clust_opt)
print(t(cbind(math$Countries, cluster = math_clust_opt@cluster)))
dtw_sci <- sci[, -1]
sci_lst <- tslist(dtw_sci)
# Apply the function to each time series in the list
sci_lst <- lapply(math_lst, remove_nan)
sci_cvi <- list()
for (i in 2:10){
sci_clust <- tsclust(sci_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
sci_metric <- cvi(sci_clust, type = "valid", log.base = 10)
sci_cvi <- append(sci_cvi, list(sci_metric))
}
sci_cvi_ma <- do.call(rbind, sci_cvi)
rownames(sci_cvi_ma) <- rw
print(sci_cvi_ma)
sci_clust_opt <- tsclust(sci_lst, type = "partitional", k = 8, distance = "dtw", centroid = "pam",seed = 725)
plot(sci_clust_opt)
print(t(cbind(sci$Countries, cluster = sci_clust_opt@cluster)))
library(readxl)
library(dtwclust)
library(dtw)
reading <- read_excel("../data/gender_gap.xlsx", sheet = "Reading")
math <- read_excel("../data/gender_gap.xlsx", sheet = "Math")
sci <- read_excel("../data/gender_gap.xlsx", sheet = "Science")
library(readxl)
library(dtwclust)
library(dtw)
reading <- read_excel("../data/gender_gap.xlsx", sheet = "Reading")
math <- read_excel("../data/gender_gap.xlsx", sheet = "Math")
sci <- read_excel("../data/gender_gap.xlsx", sheet = "Science")
reading <- subset(reading, select = -c(...1) )
country = reading[['Countries']]
dtw_reading <- reading[, -1]
reading <- subset(reading, select = -c(...1) )
library(readxl)
library(dtwclust)
library(dtw)
reading <- read_excel("../data/gender_gap.xlsx", sheet = "Reading")
math <- read_excel("../data/gender_gap.xlsx", sheet = "Math")
sci <- read_excel("../data/gender_gap.xlsx", sheet = "Science")
reading <- subset(reading, select = -c(...1) )
country = reading[['Countries']]
dtw_reading <- reading[, -1]
math <- subset(math, select = -c(...1) )
sci <- subset(sci, select = -c(...1) )
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, list(reading_metric))
}
reading_lst <- tslist(dtw_reading)
remove_nan <- function(ts) {
ts[!is.na(ts)]
}
# Apply the function to each time series in the list
reading_lst <- lapply(reading_lst, remove_nan)
reading_cvi <- list()
for (i in 2:10){
reading_clust <- tsclust(reading_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
reading_metric <- cvi(reading_clust, type = "valid", log.base = 10)
reading_cvi <- append(reading_cvi, list(reading_metric))
}
reading_cvi_ma <- do.call(rbind, reading_cvi)
rw <- c("K2","K3","K4","K5","K6","K7","K8","K9","K10")
rownames(reading_cvi_ma) <- rw
print(reading_cvi_ma)
reading_clust_opt <- tsclust(reading_lst, type = "partitional", k = 7, distance = "dtw", centroid = "pam",seed = 725)
plot(reading_clust_opt)
print(t(cbind(reading$Countries, cluster = reading_clust_opt@cluster)))
dtw_math <- math[, -1]
math_lst <- tslist(dtw_math)
# Apply the function to each time series in the list
math_lst <- lapply(math_lst, remove_nan)
math_cvi <- list()
for (i in 2:10){
math_clust <- tsclust(math_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
math_metric <- cvi(math_clust, type = "valid", log.base = 10)
math_cvi <- append(math_cvi, list(math_metric))
}
math_cvi_ma <- do.call(rbind, math_cvi)
rownames(math_cvi_ma) <- rw
print(math_cvi_ma)
math_clust_opt <- tsclust(math_lst, type = "partitional", k = 5, distance = "dtw", centroid = "pam",seed = 725)
plot(math_clust_opt)
print(t(cbind(math$Countries, cluster = math_clust_opt@cluster)))
dtw_sci <- sci[, -1]
sci_lst <- tslist(dtw_sci)
# Apply the function to each time series in the list
sci_lst <- lapply(math_lst, remove_nan)
sci_cvi <- list()
for (i in 2:10){
sci_clust <- tsclust(sci_lst, type = "partitional", k = i, distance = "dtw", centroid = "pam")
sci_metric <- cvi(sci_clust, type = "valid", log.base = 10)
sci_cvi <- append(sci_cvi, list(sci_metric))
}
sci_cvi_ma <- do.call(rbind, sci_cvi)
rownames(sci_cvi_ma) <- rw
print(sci_cvi_ma)
sci_clust_opt <- tsclust(sci_lst, type = "partitional", k =7, distance = "dtw", centroid = "pam",seed = 725)
plot(sci_clust_opt)
print(t(cbind(sci$Countries, cluster = sci_clust_opt@cluster)))
